{
    "Parameters" : {
        "Owner" :{
            "Type" : "String",
            "Description" : "Enter the owner of the stack."
        },
        "AppName" :{
            "Type" : "String",
            "Description" : "Enter the application name associated with the stack."
        },
        "ServiceName" : {
            "Type" : "String",
            "Description" : "Enter the name of the service associated with the stack"
        },
        "CodeS3Bucket" : {
            "Type" : "String",
            "Description" : "Enter which S3 bucket holds the code for the Lambda function."
        },
        "CodeS3Key" : {
            "Type" : "String",
            "Description" : "Enter the S3 key for the code of the Lambda function."
        },
        "MemorySize" : {
            "Type" : "Number",
            "Default" : "128",
            "Description" : "Enter the amount of memory to be allocated for the Lambda function."
        },
        "RuntimeEnvironment" : {
            "Type" : "String",
            "Default" : "python2.7",
            "AllowedValues" : [ "nodejs", "nodejs4.3", "nodejs4.3-edge", "python2.7", "java8", "dotnetcore1.0" ],
            "Description" : "Choose the runtime environment for the Lambda function."
        },
        "Timeout" : {
            "Type" : "Number",
            "Default" : "3",
            "Description" : "Enter the timeout period (in seconds) for the Lambda function."
        },
        "VPC" : {
            "Type" : "AWS::EC2::VPC::Id",
            "Description" : "Select the VPC to deploy the lambda function to."
        },
        "Subnets" : {
            "Type" : "List<AWS::EC2::Subnet::Id>",
            "Description" : "Select the subnets to deploy the Lambda function to."
        }
    },
    "Resources" : {

        "LambdaIAMRole" : {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument" : {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "lambda.amazonaws.com"
                            },
                            "Action": "sts:AssumeRole"
                        }
                    ]
                },
                "ManagedPolicyArns": [ 
                    "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                    "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
                ],
                "Path": { "Fn::Join" : [ "", [ "/", { "Ref" : "AppName" }, "/" ] ] },
                "RoleName": { "Fn::Join" : [ "-", [ { "Ref" : "AppName" }, { "Ref" : "ServiceName" }, "service-lambda-role" ] ] }
          }
        },
        "LambdaIAMPolicy" : {
          "Type" : "AWS::IAM::Policy",
          "Properties" : { 
                "PolicyDocument" : {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Sid": "Stmt1479759591000",
                            "Effect": "Allow",
                            "Action": [
                                "dynamodb:DeleteItem",
                                "dynamodb:PutItem",
                                "dynamodb:Query",
                                "dynamodb:UpdateItem"
                            ],
                            "Resource": [
                                "*"
                            ]
                        }
                    ]
                },
                "PolicyName" : { "Fn::Join" : [ "-", [ { "Ref" : "AppName" }, { "Ref" : "ServiceName" }, "service-lambda-policy" ] ] },
                "Roles" : [ { "Ref" : "LambdaIAMRole" }]
            }
        },
        "RestaurantsDynamoDBTable" : {
            "Type" : "AWS::DynamoDB::Table",
            "Properties" : {
                "TableName" : { "Fn::Join" : [ "", [ { "Ref" : "AppName" }, "-restaurants" ] ] },
                "KeySchema" : [ 
                        {
                            "AttributeName" : "geohash",
                            "KeyType" : "HASH"
                        },
                        {
                            "AttributeName" : "restaurant-id",
                            "KeyType" : "RANGE"
                        }
                ],
                "ProvisionedThroughput" : {
                   "ReadCapacityUnits" : 5,
                   "WriteCapacityUnits" : 5
                },
                "AttributeDefinitions" : [
                    {
                        "AttributeName" : "geohash",
                        "AttributeType" : "S"
                    }, 
                    {
                        "AttributeName" : "restaurant-id",
                        "AttributeType" : "S"
                    }
                ],
                "GlobalSecondaryIndexes" : [ 
                    {
                        "IndexName" : "restaurant-id-index",
                        "KeySchema" : [ 
                            {
                                "AttributeName" : "restaurant-id",
                                "KeyType" : "HASH"
                            }
                        ],                           
                        "Projection" : {
                            "ProjectionType" : "ALL"
                        },
                        "ProvisionedThroughput" : {
                            "ReadCapacityUnits" : 5,
                            "WriteCapacityUnits" : 5
                        },
                    }
                ]
            }
        },
        "SecurityGroup" : {
            "Type" : "AWS::EC2::SecurityGroup",
            "Properties" : {
                "GroupDescription" : { "Fn::Join" : [ "-", [ { "Ref" : "AppName" }, { "Ref" : "ServiceName" }, "service-sg" ] ] },
                "Tags" :  [ 
                    {
                        "Key" : "Owner",
                        "Value" : { "Ref" : "Owner" }
                    },
                    {
                        "Key" : "Name",
                        "Value" : { "Fn::Join" : [ "-", [ { "Ref" : "AppName" }, { "Ref" : "ServiceName" }, "service-sg" ] ] }
                    }
                ],
                "VpcId" : { "Ref" : "VPC" }
          }
        },
        "LambdaFunction" : {
            "Type" : "AWS::Lambda::Function",
            "Properties" : {
                "Code": {
                    "S3Bucket": { "Ref" : "CodeS3Bucket"},
                    "S3Key": { "Ref" : "CodeS3Key" }
                },
                "FunctionName" : { "Fn::Join" : [ "-", [ { "Ref" : "AppName" }, { "Ref" : "ServiceName" }, "service" ] ] },
                "Handler" : { "Fn::Join" : [ "-", [ { "Ref" : "ServiceName" }, "service-lambda.lambda_handler" ] ] },
                "MemorySize" : { "Ref" : "MemorySize" },
                "Role" : {"Fn::GetAtt" : ["LambdaIAMRole", "Arn"] },
                "Runtime" : { "Ref" : "RuntimeEnvironment" },
                "Timeout" : { "Ref" : "Timeout" },
                "VpcConfig" : {
                    "SecurityGroupIds" : [{ "Ref" : "SecurityGroup" }],
                    "SubnetIds" : { "Ref" : "Subnets" }
                }
            }
        }
    }
}